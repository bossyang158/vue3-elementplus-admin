/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  /* 引入Vue的EffectScope类型，用于创建作用域 */
  const EffectScope: typeof import("vue")["EffectScope"];
  /* 引入Element Plus的ElForm组件类型，用于表单操作 */
  const ElForm: typeof import("element-plus/es")["ElForm"];
  /* 引入Element Plus的ElMessage组件类型，用于消息提示 */
  const ElMessage: typeof import("element-plus/es")["ElMessage"];
  /* 引入Element Plus的ElNotification组件类型，用于通知提示 */
  const ElNotification: typeof import("element-plus/es")["ElNotification"];
  /* 引入Element Plus的ElMessageBox组件类型，用于消息框 */
  const ElMessageBox: typeof import("element-plus/es")["ElMessageBox"];
  /* 引入Element Plus的ElTree组件类型，用于树形结构展示 */
  const ElTree: typeof import("element-plus/es")["ElTree"];
  /* 引入VueUse的asyncComputed类型，用于创建异步计算属性 */
  const asyncComputed: typeof import("@vueuse/core")["asyncComputed"];
  /* 引入VueUse的autoResetRef类型，用于创建自动重置的ref */
  const autoResetRef: typeof import("@vueuse/core")["autoResetRef"];
  /* 引入Vue的computed类型，用于创建计算属性 */
  const computed: typeof import("vue")["computed"];
  /* 引入VueUse的computedAsync类型，用于创建异步计算属性 */
  const computedAsync: typeof import("@vueuse/core")["computedAsync"];
  /* 引入VueUse的computedEager类型，用于创建提前求值的计算属性 */
  const computedEager: typeof import("@vueuse/core")["computedEager"];
  /* 引入VueUse的computedInject类型，用于注入计算属性 */
  const computedInject: typeof import("@vueuse/core")["computedInject"];
  /* 引入VueUse的computedWithControl类型，用于创建带控制的计算属性 */
  const computedWithControl: typeof import("@vueuse/core")["computedWithControl"];
  /* 引入VueUse的controlledComputed类型，用于创建受控计算属性 */
  const controlledComputed: typeof import("@vueuse/core")["controlledComputed"];
  /* 引入VueUse的controlledRef类型，用于创建受控ref */
  const controlledRef: typeof import("@vueuse/core")["controlledRef"];
  /* 引入Vue的createApp函数，用于创建Vue应用 */
  const createApp: typeof import("vue")["createApp"];
  /* 引入VueUse的createEventHook类型，用于创建事件钩子 */
  const createEventHook: typeof import("@vueuse/core")["createEventHook"];
  /* 引入VueUse的createGlobalState类型，用于创建全局状态 */
  const createGlobalState: typeof import("@vueuse/core")["createGlobalState"];
  /* 引入VueUse的createInjectionState类型，用于创建注入状态 */
  const createInjectionState: typeof import("@vueuse/core")["createInjectionState"];
  /* 引入VueUse的createReactiveFn类型，用于创建响应式函数 */
  const createReactiveFn: typeof import("@vueuse/core")["createReactiveFn"];
  /* 引入VueUse的createReusableTemplate类型，用于创建可复用的模板 */
  const createReusableTemplate: typeof import("@vueuse/core")["createReusableTemplate"];
  /* 引入VueUse的createSharedComposable类型，用于创建共享的可组合函数 */
  const createSharedComposable: typeof import("@vueuse/core")["createSharedComposable"];
  /* 引入VueUse的createTemplatePromise类型，用于创建模板承诺 */
  const createTemplatePromise: typeof import("@vueuse/core")["createTemplatePromise"];
  /* 引入VueUse的createUnrefFn类型，用于创建解引用函数 */
  const createUnrefFn: typeof import("@vueuse/core")["createUnrefFn"];
  /* 引入Vue的customRef类型，用于创建自定义ref */
  const customRef: typeof import("vue")["customRef"];
  /* 引入VueUse的debouncedRef类型，用于创建带防抖的ref */
  const debouncedRef: typeof import("@vueuse/core")["debouncedRef"];
  /* 引入VueUse的debouncedWatch类型，用于创建带防抖的watch */
  const debouncedWatch: typeof import("@vueuse/core")["debouncedWatch"];
  /* 引入Vue的defineAsyncComponent函数，用于定义异步组件 */
  const defineAsyncComponent: typeof import("vue")["defineAsyncComponent"];
  /* 引入Vue的defineComponent函数，用于定义组件 */
  const defineComponent: typeof import("vue")["defineComponent"];
  /* 引入VueUse的eagerComputed类型，用于创建提前求值的计算属性 */
  const eagerComputed: typeof import("@vueuse/core")["eagerComputed"];
  /* 引入Vue的作用域作用域函数 */
  const effectScope: typeof import("vue")["effectScope"];
  /* 引入VueUse的extendRef类型，用于扩展ref */
  const extendRef: typeof import("@vueuse/core")["extendRef"];
  /* 引入Vue的getCurrentInstance函数，用于获取当前实例 */
  const getCurrentInstance: typeof import("vue")["getCurrentInstance"];
  /* 引入Vue的getCurrentScope函数，用于获取当前作用域 */
  const getCurrentScope: typeof import("vue")["getCurrentScope"];
  /* 引入Vue的h函数，用于创建虚拟节点 */
  const h: typeof import("vue")["h"];
  /* 引入VueUse的ignorableWatch类型，用于创建可忽略的watch */
  const ignorableWatch: typeof import("@vueuse/core")["ignorableWatch"];
  /* 引入Vue的inject函数，用于注入依赖 */
  const inject: typeof import("vue")["inject"];
  /* 引入VueUse的isDefined函数，用于判断值是否定义 */
  const isDefined: typeof import("@vueuse/core")["isDefined"];
  /* 引入Vue的isProxy函数，用于判断是否是代理对象 */
  const isProxy: typeof import("vue")["isProxy"];
  /* 引入Vue的isReactive函数，用于判断是否是响应式对象 */
  const isReactive: typeof import("vue")["isReactive"];
  /* 引入Vue的isReadonly函数，用于判断是否是只读对象 */
  const isReadonly: typeof import("vue")["isReadonly"];
  /* 引入Vue的isRef函数，用于判断是否是ref对象 */
  const isRef: typeof import("vue")["isRef"];
  /* 引入VueUse的makeDestructurable函数，用于创建可解构的对象 */
  const makeDestructurable: typeof import("@vueuse/core")["makeDestructurable"];
  /* 引入Vue的markRaw函数，用于标记原始值 */
  const markRaw: typeof import("vue")["markRaw"];
  /* 引入Vue的nextTick函数，用于在下次DOM更新循环之后执行回调 */
  const nextTick: typeof import("vue")["nextTick"];
  /* 引入Vue的onActivated函数，用于创建激活时的钩子 */
  const onActivated: typeof import("vue")["onActivated"];
  /* 引入Vue的onBeforeMount函数，用于创建挂载前的钩子 */
  const onBeforeMount: typeof import("vue")["onBeforeMount"];
  /* 引入Vue的onBeforeUnmount函数，用于创建卸载前的钩子 */
  const onBeforeUnmount: typeof import("vue")["onBeforeUnmount"];
  /* 引入Vue的onBeforeUpdate函数，用于创建更新前的钩子 */
  const onBeforeUpdate: typeof import("vue")["onBeforeUpdate"];
  /* 引入VueUse的onClickOutside函数，用于创建点击外部时的钩子 */
  const onClickOutside: typeof import("@vueuse/core")["onClickOutside"];
  /* 引入Vue的onDeactivated函数，用于创建停用时的钩子 */
  const onDeactivated: typeof import("vue")["onDeactivated"];
  /* 引入Vue的onErrorCaptured函数，用于创建错误捕获的钩子 */
  const onErrorCaptured: typeof import("vue")["onErrorCaptured"];
  /* 引入VueUse的onKeyStroke函数，用于创建按键事件的钩子 */
  const onKeyStroke: typeof import("@vueuse/core")["onKeyStroke"];
  /* 引入VueUse的onLongPress函数，用于创建长按事件的钩子 */
  const onLongPress: typeof import("@vueuse/core")["onLongPress"];
  /* 引入Vue的onMounted函数，用于创建挂载后的钩子 */
  const onMounted: typeof import("vue")["onMounted"];
  /* 引入Vue的onRenderTracked函数，用于创建渲染跟踪的钩子 */
  const onRenderTracked: typeof import("vue")["onRenderTracked"];
  /* 引入Vue的onRenderTriggered函数，用于创建渲染触发的钩子 */
  const onRenderTriggered: typeof import("vue")["onRenderTriggered"];
  /* 引入Vue的onScopeDispose函数，用于创建作用域销毁的钩子 */
  const onScopeDispose: typeof import("vue")["onScopeDispose"];
  /* 引入Vue的onServerPrefetch函数，用于创建服务器预取的钩子 */
  const onServerPrefetch: typeof import("vue")["onServerPrefetch"];
  /* 引入VueUse的onStartTyping函数，用于创建开始输入的钩子 */
  const onStartTyping: typeof import("@vueuse/core")["onStartTyping"];
  /* 引入Vue的onUnmounted函数，用于创建卸载后的钩子 */
  const onUnmounted: typeof import("vue")["onUnmounted"];
  /* 引入Vue的onUpdated函数，用于创建更新后的钩子 */
  const onUpdated: typeof import("vue")["onUpdated"];
  /* 引入VueUse的pausableWatch函数，用于创建可暂停的watch */
  const pausableWatch: typeof import("@vueuse/core")["pausableWatch"];
  /* 引入Vue的provide函数，用于提供依赖 */
  const provide: typeof import("vue")["provide"];
  /* 引入VueUse的reactify函数，用于创建响应式对象 */
  const reactify: typeof import("@vueuse/core")["reactify"];
  /* 引入VueUse的reactifyObject函数，用于创建响应式对象 */
  const reactifyObject: typeof import("@vueuse/core")["reactifyObject"];
  /* 引入Vue的reactive函数，用于创建响应式对象 */
  const reactive: typeof import("vue")["reactive"];
  /* 引入VueUse的reactiveComputed函数，用于创建响应式计算属性 */
  const reactiveComputed: typeof import("@vueuse/core")["reactiveComputed"];
  /* 引入VueUse的reactiveOmit函数，用于创建省略某些属性的响应式对象 */
  const reactiveOmit: typeof import("@vueuse/core")["reactiveOmit"];
  /* 引入VueUse的reactivePick函数，用于创建选择某些属性的响应式对象 */
  const reactivePick: typeof import("@vueuse/core")["reactivePick"];
  /* 引入Vue的readonly函数，用于创建只读的响应式对象 */
  const readonly: typeof import("vue")["readonly"];

  const tryOnBeforeMount: typeof import("@vueuse/core")["tryOnBeforeMount"];
  const tryOnBeforeUnmount: typeof import("@vueuse/core")["tryOnBeforeUnmount"];
  const tryOnMounted: typeof import("@vueuse/core")["tryOnMounted"];
  const tryOnScopeDispose: typeof import("@vueuse/core")["tryOnScopeDispose"];
  const tryOnUnmounted: typeof import("@vueuse/core")["tryOnUnmounted"];
  const unref: typeof import("vue")["unref"];
  const unrefElement: typeof import("@vueuse/core")["unrefElement"];
  const until: typeof import("@vueuse/core")["until"];
  const useActiveElement: typeof import("@vueuse/core")["useActiveElement"];
  const useAnimate: typeof import("@vueuse/core")["useAnimate"];
  const useArrayDifference: typeof import("@vueuse/core")["useArrayDifference"];
  const useArrayEvery: typeof import("@vueuse/core")["useArrayEvery"];
  const useArrayFilter: typeof import("@vueuse/core")["useArrayFilter"];
  const useArrayFind: typeof import("@vueuse/core")["useArrayFind"];
  const useArrayFindIndex: typeof import("@vueuse/core")["useArrayFindIndex"];
  const useArrayFindLast: typeof import("@vueuse/core")["useArrayFindLast"];
  const useArrayIncludes: typeof import("@vueuse/core")["useArrayIncludes"];
  const useArrayJoin: typeof import("@vueuse/core")["useArrayJoin"];
  const useArrayMap: typeof import("@vueuse/core")["useArrayMap"];
  const useArrayReduce: typeof import("@vueuse/core")["useArrayReduce"];
  const useArraySome: typeof import("@vueuse/core")["useArraySome"];
  const useArrayUnique: typeof import("@vueuse/core")["useArrayUnique"];
  const useAsyncQueue: typeof import("@vueuse/core")["useAsyncQueue"];
  const useAsyncState: typeof import("@vueuse/core")["useAsyncState"];
  const useAttrs: typeof import("vue")["useAttrs"];
  const useBase64: typeof import("@vueuse/core")["useBase64"];
  const useBattery: typeof import("@vueuse/core")["useBattery"];
  const useBluetooth: typeof import("@vueuse/core")["useBluetooth"];
  const useBreakpoints: typeof import("@vueuse/core")["useBreakpoints"];
  const useBroadcastChannel: typeof import("@vueuse/core")["useBroadcastChannel"];
  const useBrowserLocation: typeof import("@vueuse/core")["useBrowserLocation"];
  const useCached: typeof import("@vueuse/core")["useCached"];
  const useClipboard: typeof import("@vueuse/core")["useClipboard"];
  const useCloned: typeof import("@vueuse/core")["useCloned"];
  const useColorMode: typeof import("@vueuse/core")["useColorMode"];
  const useConfirmDialog: typeof import("@vueuse/core")["useConfirmDialog"];
  const useCounter: typeof import("@vueuse/core")["useCounter"];
  const useCssModule: typeof import("vue")["useCssModule"];
  const useCssVar: typeof import("@vueuse/core")["useCssVar"];
  const useCssVars: typeof import("vue")["useCssVars"];
  const useCurrentElement: typeof import("@vueuse/core")["useCurrentElement"];
  const useCycleList: typeof import("@vueuse/core")["useCycleList"];
  const useDark: typeof import("@vueuse/core")["useDark"];
  const useDateFormat: typeof import("@vueuse/core")["useDateFormat"];
  const useDebounce: typeof import("@vueuse/core")["useDebounce"];
  const useDebounceFn: typeof import("@vueuse/core")["useDebounceFn"];
  const useDebouncedRefHistory: typeof import("@vueuse/core")["useDebouncedRefHistory"];
  const useDeviceMotion: typeof import("@vueuse/core")["useDeviceMotion"];
  const useDeviceOrientation: typeof import("@vueuse/core")["useDeviceOrientation"];
  const useDevicePixelRatio: typeof import("@vueuse/core")["useDevicePixelRatio"];
  const useDevicesList: typeof import("@vueuse/core")["useDevicesList"];
  const useDisplayMedia: typeof import("@vueuse/core")["useDisplayMedia"];
  const useDocumentVisibility: typeof import("@vueuse/core")["useDocumentVisibility"];
  const useDraggable: typeof import("@vueuse/core")["useDraggable"];
  const useDropZone: typeof import("@vueuse/core")["useDropZone"];
  const useElementBounding: typeof import("@vueuse/core")["useElementBounding"];
  const useElementByPoint: typeof import("@vueuse/core")["useElementByPoint"];
  const useElementHover: typeof import("@vueuse/core")["useElementHover"];
  const useElementSize: typeof import("@vueuse/core")["useElementSize"];
  const useElementVisibility: typeof import("@vueuse/core")["useElementVisibility"];
  const useEventBus: typeof import("@vueuse/core")["useEventBus"];
  const useEventListener: typeof import("@vueuse/core")["useEventListener"];
  const useEventSource: typeof import("@vueuse/core")["useEventSource"];
  const useEyeDropper: typeof import("@vueuse/core")["useEyeDropper"];
  const useFavicon: typeof import("@vueuse/core")["useFavicon"];
  const useFetch: typeof import("@vueuse/core")["useFetch"];
  const useFileDialog: typeof import("@vueuse/core")["useFileDialog"];
  const useFileSystemAccess: typeof import("@vueuse/core")["useFileSystemAccess"];
  const useFocus: typeof import("@vueuse/core")["useFocus"];
  const useFocusWithin: typeof import("@vueuse/core")["useFocusWithin"];
  const useFps: typeof import("@vueuse/core")["useFps"];
  const useFullscreen: typeof import("@vueuse/core")["useFullscreen"];
  const useGamepad: typeof import("@vueuse/core")["useGamepad"];
  const useGeolocation: typeof import("@vueuse/core")["useGeolocation"];
  const useIdle: typeof import("@vueuse/core")["useIdle"];
  const useImage: typeof import("@vueuse/core")["useImage"];
  const useInfiniteScroll: typeof import("@vueuse/core")["useInfiniteScroll"];
  const useIntersectionObserver: typeof import("@vueuse/core")["useIntersectionObserver"];
  const useInterval: typeof import("@vueuse/core")["useInterval"];
  const useIntervalFn: typeof import("@vueuse/core")["useIntervalFn"];
  const useKeyModifier: typeof import("@vueuse/core")["useKeyModifier"];
  const useLastChanged: typeof import("@vueuse/core")["useLastChanged"];
  const useLocalStorage: typeof import("@vueuse/core")["useLocalStorage"];
  const useMagicKeys: typeof import("@vueuse/core")["useMagicKeys"];
  const useManualRefHistory: typeof import("@vueuse/core")["useManualRefHistory"];
  const useMediaControls: typeof import("@vueuse/core")["useMediaControls"];
  const useMediaQuery: typeof import("@vueuse/core")["useMediaQuery"];
  const useMemoize: typeof import("@vueuse/core")["useMemoize"];
  const useMemory: typeof import("@vueuse/core")["useMemory"];
  const useMounted: typeof import("@vueuse/core")["useMounted"];
  const useMouse: typeof import("@vueuse/core")["useMouse"];
  const useMouseInElement: typeof import("@vueuse/core")["useMouseInElement"];
  const useMousePressed: typeof import("@vueuse/core")["useMousePressed"];
  const useMutationObserver: typeof import("@vueuse/core")["useMutationObserver"];
  const useNavigatorLanguage: typeof import("@vueuse/core")["useNavigatorLanguage"];
  const useNetwork: typeof import("@vueuse/core")["useNetwork"];
  const useNow: typeof import("@vueuse/core")["useNow"];
  const useObjectUrl: typeof import("@vueuse/core")["useObjectUrl"];
  const useOffsetPagination: typeof import("@vueuse/core")["useOffsetPagination"];
  const useOnline: typeof import("@vueuse/core")["useOnline"];
  const usePageLeave: typeof import("@vueuse/core")["usePageLeave"];
  const useParallax: typeof import("@vueuse/core")["useParallax"];
  const useParentElement: typeof import("@vueuse/core")["useParentElement"];
  const usePerformanceObserver: typeof import("@vueuse/core")["usePerformanceObserver"];
  const usePermission: typeof import("@vueuse/core")["usePermission"];
  const usePointer: typeof import("@vueuse/core")["usePointer"];
  const usePointerLock: typeof import("@vueuse/core")["usePointerLock"];
  const usePointerSwipe: typeof import("@vueuse/core")["usePointerSwipe"];
  const usePreferredColorScheme: typeof import("@vueuse/core")["usePreferredColorScheme"];
  const usePreferredContrast: typeof import("@vueuse/core")["usePreferredContrast"];
  const usePreferredDark: typeof import("@vueuse/core")["usePreferredDark"];
  const usePreferredLanguages: typeof import("@vueuse/core")["usePreferredLanguages"];
  const usePreferredReducedMotion: typeof import("@vueuse/core")["usePreferredReducedMotion"];
  const usePrevious: typeof import("@vueuse/core")["usePrevious"];
  const useRafFn: typeof import("@vueuse/core")["useRafFn"];
  const useRefHistory: typeof import("@vueuse/core")["useRefHistory"];
  const useResizeObserver: typeof import("@vueuse/core")["useResizeObserver"];
  const useScreenOrientation: typeof import("@vueuse/core")["useScreenOrientation"];
  const useScreenSafeArea: typeof import("@vueuse/core")["useScreenSafeArea"];
  const useScriptTag: typeof import("@vueuse/core")["useScriptTag"];
  const useScroll: typeof import("@vueuse/core")["useScroll"];
  const useScrollLock: typeof import("@vueuse/core")["useScrollLock"];
  const useSessionStorage: typeof import("@vueuse/core")["useSessionStorage"];
  const useShare: typeof import("@vueuse/core")["useShare"];
  const useSlots: typeof import("vue")["useSlots"];
  const useSorted: typeof import("@vueuse/core")["useSorted"];
  const useSpeechRecognition: typeof import("@vueuse/core")["useSpeechRecognition"];
  const useSpeechSynthesis: typeof import("@vueuse/core")["useSpeechSynthesis"];
  const useStepper: typeof import("@vueuse/core")["useStepper"];
  const useStorage: typeof import("@vueuse/core")["useStorage"];
  const useStorageAsync: typeof import("@vueuse/core")["useStorageAsync"];
  const useStyleTag: typeof import("@vueuse/core")["useStyleTag"];
  const useSupported: typeof import("@vueuse/core")["useSupported"];
  const useSwipe: typeof import("@vueuse/core")["useSwipe"];
  const useTemplateRefsList: typeof import("@vueuse/core")["useTemplateRefsList"];
  const useTextDirection: typeof import("@vueuse/core")["useTextDirection"];
  const useTextSelection: typeof import("@vueuse/core")["useTextSelection"];
  const useTextareaAutosize: typeof import("@vueuse/core")["useTextareaAutosize"];
  const useThrottle: typeof import("@vueuse/core")["useThrottle"];
  const useThrottleFn: typeof import("@vueuse/core")["useThrottleFn"];
  const useThrottledRefHistory: typeof import("@vueuse/core")["useThrottledRefHistory"];
  const useTimeAgo: typeof import("@vueuse/core")["useTimeAgo"];
  const useTimeout: typeof import("@vueuse/core")["useTimeout"];
  const useTimeoutFn: typeof import("@vueuse/core")["useTimeoutFn"];
  const useTimeoutPoll: typeof import("@vueuse/core")["useTimeoutPoll"];
  const useTimestamp: typeof import("@vueuse/core")["useTimestamp"];
  const useTitle: typeof import("@vueuse/core")["useTitle"];
  const useToNumber: typeof import("@vueuse/core")["useToNumber"];
  const useToString: typeof import("@vueuse/core")["useToString"];
  const useToggle: typeof import("@vueuse/core")["useToggle"];
  const useTransition: typeof import("@vueuse/core")["useTransition"];
  const useUrlSearchParams: typeof import("@vueuse/core")["useUrlSearchParams"];
  const useUserMedia: typeof import("@vueuse/core")["useUserMedia"];
  const useVModel: typeof import("@vueuse/core")["useVModel"];
  const useVModels: typeof import("@vueuse/core")["useVModels"];
  const useVibrate: typeof import("@vueuse/core")["useVibrate"];
  const useVirtualList: typeof import("@vueuse/core")["useVirtualList"];
  const useWakeLock: typeof import("@vueuse/core")["useWakeLock"];
  const useWebNotification: typeof import("@vueuse/core")["useWebNotification"];
  const useWebSocket: typeof import("@vueuse/core")["useWebSocket"];
  const useWebWorker: typeof import("@vueuse/core")["useWebWorker"];
  const useWebWorkerFn: typeof import("@vueuse/core")["useWebWorkerFn"];
  const useWindowFocus: typeof import("@vueuse/core")["useWindowFocus"];
  const useWindowScroll: typeof import("@vueuse/core")["useWindowScroll"];
  const useWindowSize: typeof import("@vueuse/core")["useWindowSize"];
  const watch: typeof import("vue")["watch"];
  const watchArray: typeof import("@vueuse/core")["watchArray"];
  const watchAtMost: typeof import("@vueuse/core")["watchAtMost"];
  const watchDebounced: typeof import("@vueuse/core")["watchDebounced"];
  const watchDeep: typeof import("@vueuse/core")["watchDeep"];
  const watchEffect: typeof import("vue")["watchEffect"];
  const watchIgnorable: typeof import("@vueuse/core")["watchIgnorable"];
  const watchImmediate: typeof import("@vueuse/core")["watchImmediate"];
  const watchOnce: typeof import("@vueuse/core")["watchOnce"];
  const watchPausable: typeof import("@vueuse/core")["watchPausable"];
  const watchPostEffect: typeof import("vue")["watchPostEffect"];
  const watchSyncEffect: typeof import("vue")["watchSyncEffect"];
  const watchThrottled: typeof import("@vueuse/core")["watchThrottled"];
  const watchTriggerable: typeof import("@vueuse/core")["watchTriggerable"];
  const watchWithFilter: typeof import("@vueuse/core")["watchWithFilter"];
  const whenever: typeof import("@vueuse/core")["whenever"];
}
// for type re-export
declare global {
  // @ts-ignore
  export type {
    Component,
    ComponentPublicInstance,
    ComputedRef,
    InjectionKey,
    PropType,
    Ref,
    VNode,
  } from "vue";
}
// for vue template auto import
import { UnwrapRef } from "vue";
declare module "vue" {
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import("vue")["EffectScope"]>;
    readonly ElForm: UnwrapRef<typeof import("element-plus/es")["ElForm"]>;
    readonly ElMessage: UnwrapRef<
      typeof import("element-plus/es")["ElMessage"]
    >;
    readonly ElMessageBox: UnwrapRef<
      typeof import("element-plus/es")["ElMessageBox"]
    >;
    readonly ElTree: UnwrapRef<typeof import("element-plus/es")["ElTree"]>;
    readonly asyncComputed: UnwrapRef<
      typeof import("@vueuse/core")["asyncComputed"]
    >;
    readonly autoResetRef: UnwrapRef<
      typeof import("@vueuse/core")["autoResetRef"]
    >;
    readonly computed: UnwrapRef<typeof import("vue")["computed"]>;
    readonly computedAsync: UnwrapRef<
      typeof import("@vueuse/core")["computedAsync"]
    >;
    readonly computedEager: UnwrapRef<
      typeof import("@vueuse/core")["computedEager"]
    >;
    readonly computedInject: UnwrapRef<
      typeof import("@vueuse/core")["computedInject"]
    >;
    readonly computedWithControl: UnwrapRef<
      typeof import("@vueuse/core")["computedWithControl"]
    >;
    readonly controlledComputed: UnwrapRef<
      typeof import("@vueuse/core")["controlledComputed"]
    >;
    readonly controlledRef: UnwrapRef<
      typeof import("@vueuse/core")["controlledRef"]
    >;
    readonly createApp: UnwrapRef<typeof import("vue")["createApp"]>;
    readonly createEventHook: UnwrapRef<
      typeof import("@vueuse/core")["createEventHook"]
    >;
    readonly createGlobalState: UnwrapRef<
      typeof import("@vueuse/core")["createGlobalState"]
    >;
    readonly createInjectionState: UnwrapRef<
      typeof import("@vueuse/core")["createInjectionState"]
    >;
    readonly createReactiveFn: UnwrapRef<
      typeof import("@vueuse/core")["createReactiveFn"]
    >;
    readonly createReusableTemplate: UnwrapRef<
      typeof import("@vueuse/core")["createReusableTemplate"]
    >;
    readonly createSharedComposable: UnwrapRef<
      typeof import("@vueuse/core")["createSharedComposable"]
    >;
    readonly createTemplatePromise: UnwrapRef<
      typeof import("@vueuse/core")["createTemplatePromise"]
    >;
    readonly createUnrefFn: UnwrapRef<
      typeof import("@vueuse/core")["createUnrefFn"]
    >;
    readonly customRef: UnwrapRef<typeof import("vue")["customRef"]>;
    readonly debouncedRef: UnwrapRef<
      typeof import("@vueuse/core")["debouncedRef"]
    >;
    readonly debouncedWatch: UnwrapRef<
      typeof import("@vueuse/core")["debouncedWatch"]
    >;
    readonly defineAsyncComponent: UnwrapRef<
      typeof import("vue")["defineAsyncComponent"]
    >;
    readonly defineComponent: UnwrapRef<
      typeof import("vue")["defineComponent"]
    >;
    readonly eagerComputed: UnwrapRef<
      typeof import("@vueuse/core")["eagerComputed"]
    >;
    readonly effectScope: UnwrapRef<typeof import("vue")["effectScope"]>;
    readonly extendRef: UnwrapRef<typeof import("@vueuse/core")["extendRef"]>;
    readonly getCurrentInstance: UnwrapRef<
      typeof import("vue")["getCurrentInstance"]
    >;
    readonly getCurrentScope: UnwrapRef<
      typeof import("vue")["getCurrentScope"]
    >;
    readonly h: UnwrapRef<typeof import("vue")["h"]>;
    readonly ignorableWatch: UnwrapRef<
      typeof import("@vueuse/core")["ignorableWatch"]
    >;
    readonly inject: UnwrapRef<typeof import("vue")["inject"]>;
    readonly isDefined: UnwrapRef<typeof import("@vueuse/core")["isDefined"]>;
    readonly isProxy: UnwrapRef<typeof import("vue")["isProxy"]>;
    readonly isReactive: UnwrapRef<typeof import("vue")["isReactive"]>;
    readonly isReadonly: UnwrapRef<typeof import("vue")["isReadonly"]>;
    readonly isRef: UnwrapRef<typeof import("vue")["isRef"]>;
    readonly makeDestructurable: UnwrapRef<
      typeof import("@vueuse/core")["makeDestructurable"]
    >;
    readonly markRaw: UnwrapRef<typeof import("vue")["markRaw"]>;
    readonly nextTick: UnwrapRef<typeof import("vue")["nextTick"]>;
    readonly onActivated: UnwrapRef<typeof import("vue")["onActivated"]>;
    readonly onBeforeMount: UnwrapRef<typeof import("vue")["onBeforeMount"]>;
    readonly onBeforeUnmount: UnwrapRef<
      typeof import("vue")["onBeforeUnmount"]
    >;
    readonly onBeforeUpdate: UnwrapRef<typeof import("vue")["onBeforeUpdate"]>;
    readonly onClickOutside: UnwrapRef<
      typeof import("@vueuse/core")["onClickOutside"]
    >;
    readonly onDeactivated: UnwrapRef<typeof import("vue")["onDeactivated"]>;
    readonly onErrorCaptured: UnwrapRef<
      typeof import("vue")["onErrorCaptured"]
    >;
    readonly onKeyStroke: UnwrapRef<
      typeof import("@vueuse/core")["onKeyStroke"]
    >;
    readonly onLongPress: UnwrapRef<
      typeof import("@vueuse/core")["onLongPress"]
    >;
    readonly onMounted: UnwrapRef<typeof import("vue")["onMounted"]>;
    readonly onRenderTracked: UnwrapRef<
      typeof import("vue")["onRenderTracked"]
    >;
    readonly onRenderTriggered: UnwrapRef<
      typeof import("vue")["onRenderTriggered"]
    >;
    readonly onScopeDispose: UnwrapRef<typeof import("vue")["onScopeDispose"]>;
    readonly onServerPrefetch: UnwrapRef<
      typeof import("vue")["onServerPrefetch"]
    >;
    readonly onStartTyping: UnwrapRef<
      typeof import("@vueuse/core")["onStartTyping"]
    >;
    readonly onUnmounted: UnwrapRef<typeof import("vue")["onUnmounted"]>;
    readonly onUpdated: UnwrapRef<typeof import("vue")["onUpdated"]>;
    readonly pausableWatch: UnwrapRef<
      typeof import("@vueuse/core")["pausableWatch"]
    >;
    readonly provide: UnwrapRef<typeof import("vue")["provide"]>;
    readonly reactify: UnwrapRef<typeof import("@vueuse/core")["reactify"]>;
    readonly reactifyObject: UnwrapRef<
      typeof import("@vueuse/core")["reactifyObject"]
    >;
    readonly reactive: UnwrapRef<typeof import("vue")["reactive"]>;
    readonly reactiveComputed: UnwrapRef<
      typeof import("@vueuse/core")["reactiveComputed"]
    >;
    readonly reactiveOmit: UnwrapRef<
      typeof import("@vueuse/core")["reactiveOmit"]
    >;
    readonly reactivePick: UnwrapRef<
      typeof import("@vueuse/core")["reactivePick"]
    >;
    readonly readonly: UnwrapRef<typeof import("vue")["readonly"]>;
    readonly ref: UnwrapRef<typeof import("vue")["ref"]>;
    readonly refAutoReset: UnwrapRef<
      typeof import("@vueuse/core")["refAutoReset"]
    >;
    readonly refDebounced: UnwrapRef<
      typeof import("@vueuse/core")["refDebounced"]
    >;
    readonly refDefault: UnwrapRef<typeof import("@vueuse/core")["refDefault"]>;
    readonly refThrottled: UnwrapRef<
      typeof import("@vueuse/core")["refThrottled"]
    >;
    readonly refWithControl: UnwrapRef<
      typeof import("@vueuse/core")["refWithControl"]
    >;
    readonly resolveComponent: UnwrapRef<
      typeof import("vue")["resolveComponent"]
    >;
    readonly resolveRef: UnwrapRef<typeof import("@vueuse/core")["resolveRef"]>;
    readonly resolveUnref: UnwrapRef<
      typeof import("@vueuse/core")["resolveUnref"]
    >;
    readonly shallowReactive: UnwrapRef<
      typeof import("vue")["shallowReactive"]
    >;
    readonly shallowReadonly: UnwrapRef<
      typeof import("vue")["shallowReadonly"]
    >;
    readonly shallowRef: UnwrapRef<typeof import("vue")["shallowRef"]>;
    readonly syncRef: UnwrapRef<typeof import("@vueuse/core")["syncRef"]>;
    readonly syncRefs: UnwrapRef<typeof import("@vueuse/core")["syncRefs"]>;
    readonly templateRef: UnwrapRef<
      typeof import("@vueuse/core")["templateRef"]
    >;
    readonly throttledRef: UnwrapRef<
      typeof import("@vueuse/core")["throttledRef"]
    >;
    readonly throttledWatch: UnwrapRef<
      typeof import("@vueuse/core")["throttledWatch"]
    >;
    readonly toRaw: UnwrapRef<typeof import("vue")["toRaw"]>;
    readonly toReactive: UnwrapRef<typeof import("@vueuse/core")["toReactive"]>;
    readonly toRef: UnwrapRef<typeof import("vue")["toRef"]>;
    readonly toRefs: UnwrapRef<typeof import("vue")["toRefs"]>;
    readonly toValue: UnwrapRef<typeof import("vue")["toValue"]>;
    readonly triggerRef: UnwrapRef<typeof import("vue")["triggerRef"]>;
    readonly tryOnBeforeMount: UnwrapRef<
      typeof import("@vueuse/core")["tryOnBeforeMount"]
    >;
    readonly tryOnBeforeUnmount: UnwrapRef<
      typeof import("@vueuse/core")["tryOnBeforeUnmount"]
    >;
    readonly tryOnMounted: UnwrapRef<
      typeof import("@vueuse/core")["tryOnMounted"]
    >;
    readonly tryOnScopeDispose: UnwrapRef<
      typeof import("@vueuse/core")["tryOnScopeDispose"]
    >;
    readonly tryOnUnmounted: UnwrapRef<
      typeof import("@vueuse/core")["tryOnUnmounted"]
    >;
    readonly unref: UnwrapRef<typeof import("vue")["unref"]>;
    readonly unrefElement: UnwrapRef<
      typeof import("@vueuse/core")["unrefElement"]
    >;
    readonly until: UnwrapRef<typeof import("@vueuse/core")["until"]>;
    readonly useActiveElement: UnwrapRef<
      typeof import("@vueuse/core")["useActiveElement"]
    >;
    readonly useAnimate: UnwrapRef<typeof import("@vueuse/core")["useAnimate"]>;
    readonly useArrayDifference: UnwrapRef<
      typeof import("@vueuse/core")["useArrayDifference"]
    >;
    readonly useArrayEvery: UnwrapRef<
      typeof import("@vueuse/core")["useArrayEvery"]
    >;
    readonly useArrayFilter: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFilter"]
    >;
    readonly useArrayFind: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFind"]
    >;
    readonly useArrayFindIndex: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFindIndex"]
    >;
    readonly useArrayFindLast: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFindLast"]
    >;
    readonly useArrayIncludes: UnwrapRef<
      typeof import("@vueuse/core")["useArrayIncludes"]
    >;
    readonly useArrayJoin: UnwrapRef<
      typeof import("@vueuse/core")["useArrayJoin"]
    >;
    readonly useArrayMap: UnwrapRef<
      typeof import("@vueuse/core")["useArrayMap"]
    >;
    readonly useArrayReduce: UnwrapRef<
      typeof import("@vueuse/core")["useArrayReduce"]
    >;
    readonly useArraySome: UnwrapRef<
      typeof import("@vueuse/core")["useArraySome"]
    >;
    readonly useArrayUnique: UnwrapRef<
      typeof import("@vueuse/core")["useArrayUnique"]
    >;
    readonly useAsyncQueue: UnwrapRef<
      typeof import("@vueuse/core")["useAsyncQueue"]
    >;
    readonly useAsyncState: UnwrapRef<
      typeof import("@vueuse/core")["useAsyncState"]
    >;
    readonly useAttrs: UnwrapRef<typeof import("vue")["useAttrs"]>;
    readonly useBase64: UnwrapRef<typeof import("@vueuse/core")["useBase64"]>;
    readonly useBattery: UnwrapRef<typeof import("@vueuse/core")["useBattery"]>;
    readonly useBluetooth: UnwrapRef<
      typeof import("@vueuse/core")["useBluetooth"]
    >;
    readonly useBreakpoints: UnwrapRef<
      typeof import("@vueuse/core")["useBreakpoints"]
    >;
    readonly useBroadcastChannel: UnwrapRef<
      typeof import("@vueuse/core")["useBroadcastChannel"]
    >;
    readonly useBrowserLocation: UnwrapRef<
      typeof import("@vueuse/core")["useBrowserLocation"]
    >;
    readonly useCached: UnwrapRef<typeof import("@vueuse/core")["useCached"]>;
    readonly useClipboard: UnwrapRef<
      typeof import("@vueuse/core")["useClipboard"]
    >;
    readonly useCloned: UnwrapRef<typeof import("@vueuse/core")["useCloned"]>;
    readonly useColorMode: UnwrapRef<
      typeof import("@vueuse/core")["useColorMode"]
    >;
    readonly useConfirmDialog: UnwrapRef<
      typeof import("@vueuse/core")["useConfirmDialog"]
    >;
    readonly useCounter: UnwrapRef<typeof import("@vueuse/core")["useCounter"]>;
    readonly useCssModule: UnwrapRef<typeof import("vue")["useCssModule"]>;
    readonly useCssVar: UnwrapRef<typeof import("@vueuse/core")["useCssVar"]>;
    readonly useCssVars: UnwrapRef<typeof import("vue")["useCssVars"]>;
    readonly useCurrentElement: UnwrapRef<
      typeof import("@vueuse/core")["useCurrentElement"]
    >;
    readonly useCycleList: UnwrapRef<
      typeof import("@vueuse/core")["useCycleList"]
    >;
    readonly useDark: UnwrapRef<typeof import("@vueuse/core")["useDark"]>;
    readonly useDateFormat: UnwrapRef<
      typeof import("@vueuse/core")["useDateFormat"]
    >;
    readonly useDebounce: UnwrapRef<
      typeof import("@vueuse/core")["useDebounce"]
    >;
    readonly useDebounceFn: UnwrapRef<
      typeof import("@vueuse/core")["useDebounceFn"]
    >;
    readonly useDebouncedRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useDebouncedRefHistory"]
    >;
    readonly useDeviceMotion: UnwrapRef<
      typeof import("@vueuse/core")["useDeviceMotion"]
    >;
    readonly useDeviceOrientation: UnwrapRef<
      typeof import("@vueuse/core")["useDeviceOrientation"]
    >;
    readonly useDevicePixelRatio: UnwrapRef<
      typeof import("@vueuse/core")["useDevicePixelRatio"]
    >;
    readonly useDevicesList: UnwrapRef<
      typeof import("@vueuse/core")["useDevicesList"]
    >;
    readonly useDisplayMedia: UnwrapRef<
      typeof import("@vueuse/core")["useDisplayMedia"]
    >;
    readonly useDocumentVisibility: UnwrapRef<
      typeof import("@vueuse/core")["useDocumentVisibility"]
    >;
    readonly useDraggable: UnwrapRef<
      typeof import("@vueuse/core")["useDraggable"]
    >;
    readonly useDropZone: UnwrapRef<
      typeof import("@vueuse/core")["useDropZone"]
    >;
    readonly useElementBounding: UnwrapRef<
      typeof import("@vueuse/core")["useElementBounding"]
    >;
    readonly useElementByPoint: UnwrapRef<
      typeof import("@vueuse/core")["useElementByPoint"]
    >;
    readonly useElementHover: UnwrapRef<
      typeof import("@vueuse/core")["useElementHover"]
    >;
    readonly useElementSize: UnwrapRef<
      typeof import("@vueuse/core")["useElementSize"]
    >;
    readonly useElementVisibility: UnwrapRef<
      typeof import("@vueuse/core")["useElementVisibility"]
    >;
    readonly useEventBus: UnwrapRef<
      typeof import("@vueuse/core")["useEventBus"]
    >;
    readonly useEventListener: UnwrapRef<
      typeof import("@vueuse/core")["useEventListener"]
    >;
    readonly useEventSource: UnwrapRef<
      typeof import("@vueuse/core")["useEventSource"]
    >;
    readonly useEyeDropper: UnwrapRef<
      typeof import("@vueuse/core")["useEyeDropper"]
    >;
    readonly useFavicon: UnwrapRef<typeof import("@vueuse/core")["useFavicon"]>;
    readonly useFetch: UnwrapRef<typeof import("@vueuse/core")["useFetch"]>;
    readonly useFileDialog: UnwrapRef<
      typeof import("@vueuse/core")["useFileDialog"]
    >;
    readonly useFileSystemAccess: UnwrapRef<
      typeof import("@vueuse/core")["useFileSystemAccess"]
    >;
    readonly useFocus: UnwrapRef<typeof import("@vueuse/core")["useFocus"]>;
    readonly useFocusWithin: UnwrapRef<
      typeof import("@vueuse/core")["useFocusWithin"]
    >;
    readonly useFps: UnwrapRef<typeof import("@vueuse/core")["useFps"]>;
    readonly useFullscreen: UnwrapRef<
      typeof import("@vueuse/core")["useFullscreen"]
    >;
    readonly useGamepad: UnwrapRef<typeof import("@vueuse/core")["useGamepad"]>;
    readonly useGeolocation: UnwrapRef<
      typeof import("@vueuse/core")["useGeolocation"]
    >;
    readonly useIdle: UnwrapRef<typeof import("@vueuse/core")["useIdle"]>;
    readonly useImage: UnwrapRef<typeof import("@vueuse/core")["useImage"]>;
    readonly useInfiniteScroll: UnwrapRef<
      typeof import("@vueuse/core")["useInfiniteScroll"]
    >;
    readonly useIntersectionObserver: UnwrapRef<
      typeof import("@vueuse/core")["useIntersectionObserver"]
    >;
    readonly useInterval: UnwrapRef<
      typeof import("@vueuse/core")["useInterval"]
    >;
    readonly useIntervalFn: UnwrapRef<
      typeof import("@vueuse/core")["useIntervalFn"]
    >;
    readonly useKeyModifier: UnwrapRef<
      typeof import("@vueuse/core")["useKeyModifier"]
    >;
    readonly useLastChanged: UnwrapRef<
      typeof import("@vueuse/core")["useLastChanged"]
    >;
    readonly useLocalStorage: UnwrapRef<
      typeof import("@vueuse/core")["useLocalStorage"]
    >;
    readonly useMagicKeys: UnwrapRef<
      typeof import("@vueuse/core")["useMagicKeys"]
    >;
    readonly useManualRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useManualRefHistory"]
    >;
    readonly useMediaControls: UnwrapRef<
      typeof import("@vueuse/core")["useMediaControls"]
    >;
    readonly useMediaQuery: UnwrapRef<
      typeof import("@vueuse/core")["useMediaQuery"]
    >;
    readonly useMemoize: UnwrapRef<typeof import("@vueuse/core")["useMemoize"]>;
    readonly useMemory: UnwrapRef<typeof import("@vueuse/core")["useMemory"]>;
    readonly useMounted: UnwrapRef<typeof import("@vueuse/core")["useMounted"]>;
    readonly useMouse: UnwrapRef<typeof import("@vueuse/core")["useMouse"]>;
    readonly useMouseInElement: UnwrapRef<
      typeof import("@vueuse/core")["useMouseInElement"]
    >;
    readonly useMousePressed: UnwrapRef<
      typeof import("@vueuse/core")["useMousePressed"]
    >;
    readonly useMutationObserver: UnwrapRef<
      typeof import("@vueuse/core")["useMutationObserver"]
    >;
    readonly useNavigatorLanguage: UnwrapRef<
      typeof import("@vueuse/core")["useNavigatorLanguage"]
    >;
    readonly useNetwork: UnwrapRef<typeof import("@vueuse/core")["useNetwork"]>;
    readonly useNow: UnwrapRef<typeof import("@vueuse/core")["useNow"]>;
    readonly useObjectUrl: UnwrapRef<
      typeof import("@vueuse/core")["useObjectUrl"]
    >;
    readonly useOffsetPagination: UnwrapRef<
      typeof import("@vueuse/core")["useOffsetPagination"]
    >;
    readonly useOnline: UnwrapRef<typeof import("@vueuse/core")["useOnline"]>;
    readonly usePageLeave: UnwrapRef<
      typeof import("@vueuse/core")["usePageLeave"]
    >;
    readonly useParallax: UnwrapRef<
      typeof import("@vueuse/core")["useParallax"]
    >;
    readonly useParentElement: UnwrapRef<
      typeof import("@vueuse/core")["useParentElement"]
    >;
    readonly usePerformanceObserver: UnwrapRef<
      typeof import("@vueuse/core")["usePerformanceObserver"]
    >;
    readonly usePermission: UnwrapRef<
      typeof import("@vueuse/core")["usePermission"]
    >;
    readonly usePointer: UnwrapRef<typeof import("@vueuse/core")["usePointer"]>;
    readonly usePointerLock: UnwrapRef<
      typeof import("@vueuse/core")["usePointerLock"]
    >;
    readonly usePointerSwipe: UnwrapRef<
      typeof import("@vueuse/core")["usePointerSwipe"]
    >;
    readonly usePreferredColorScheme: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredColorScheme"]
    >;
    readonly usePreferredContrast: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredContrast"]
    >;
    readonly usePreferredDark: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredDark"]
    >;
    readonly usePreferredLanguages: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredLanguages"]
    >;
    readonly usePreferredReducedMotion: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredReducedMotion"]
    >;
    readonly usePrevious: UnwrapRef<
      typeof import("@vueuse/core")["usePrevious"]
    >;
    readonly useRafFn: UnwrapRef<typeof import("@vueuse/core")["useRafFn"]>;
    readonly useRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useRefHistory"]
    >;
    readonly useResizeObserver: UnwrapRef<
      typeof import("@vueuse/core")["useResizeObserver"]
    >;
    readonly useScreenOrientation: UnwrapRef<
      typeof import("@vueuse/core")["useScreenOrientation"]
    >;
    readonly useScreenSafeArea: UnwrapRef<
      typeof import("@vueuse/core")["useScreenSafeArea"]
    >;
    readonly useScriptTag: UnwrapRef<
      typeof import("@vueuse/core")["useScriptTag"]
    >;
    readonly useScroll: UnwrapRef<typeof import("@vueuse/core")["useScroll"]>;
    readonly useScrollLock: UnwrapRef<
      typeof import("@vueuse/core")["useScrollLock"]
    >;
    readonly useSessionStorage: UnwrapRef<
      typeof import("@vueuse/core")["useSessionStorage"]
    >;
    readonly useShare: UnwrapRef<typeof import("@vueuse/core")["useShare"]>;
    readonly useSlots: UnwrapRef<typeof import("vue")["useSlots"]>;
    readonly useSorted: UnwrapRef<typeof import("@vueuse/core")["useSorted"]>;
    readonly useSpeechRecognition: UnwrapRef<
      typeof import("@vueuse/core")["useSpeechRecognition"]
    >;
    readonly useSpeechSynthesis: UnwrapRef<
      typeof import("@vueuse/core")["useSpeechSynthesis"]
    >;
    readonly useStepper: UnwrapRef<typeof import("@vueuse/core")["useStepper"]>;
    readonly useStorage: UnwrapRef<typeof import("@vueuse/core")["useStorage"]>;
    readonly useStorageAsync: UnwrapRef<
      typeof import("@vueuse/core")["useStorageAsync"]
    >;
    readonly useStyleTag: UnwrapRef<
      typeof import("@vueuse/core")["useStyleTag"]
    >;
    readonly useSupported: UnwrapRef<
      typeof import("@vueuse/core")["useSupported"]
    >;
    readonly useSwipe: UnwrapRef<typeof import("@vueuse/core")["useSwipe"]>;
    readonly useTemplateRefsList: UnwrapRef<
      typeof import("@vueuse/core")["useTemplateRefsList"]
    >;
    readonly useTextDirection: UnwrapRef<
      typeof import("@vueuse/core")["useTextDirection"]
    >;
    readonly useTextSelection: UnwrapRef<
      typeof import("@vueuse/core")["useTextSelection"]
    >;
    readonly useTextareaAutosize: UnwrapRef<
      typeof import("@vueuse/core")["useTextareaAutosize"]
    >;
    readonly useThrottle: UnwrapRef<
      typeof import("@vueuse/core")["useThrottle"]
    >;
    readonly useThrottleFn: UnwrapRef<
      typeof import("@vueuse/core")["useThrottleFn"]
    >;
    readonly useThrottledRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useThrottledRefHistory"]
    >;
    readonly useTimeAgo: UnwrapRef<typeof import("@vueuse/core")["useTimeAgo"]>;
    readonly useTimeout: UnwrapRef<typeof import("@vueuse/core")["useTimeout"]>;
    readonly useTimeoutFn: UnwrapRef<
      typeof import("@vueuse/core")["useTimeoutFn"]
    >;
    readonly useTimeoutPoll: UnwrapRef<
      typeof import("@vueuse/core")["useTimeoutPoll"]
    >;
    readonly useTimestamp: UnwrapRef<
      typeof import("@vueuse/core")["useTimestamp"]
    >;
    readonly useTitle: UnwrapRef<typeof import("@vueuse/core")["useTitle"]>;
    readonly useToNumber: UnwrapRef<
      typeof import("@vueuse/core")["useToNumber"]
    >;
    readonly useToString: UnwrapRef<
      typeof import("@vueuse/core")["useToString"]
    >;
    readonly useToggle: UnwrapRef<typeof import("@vueuse/core")["useToggle"]>;
    readonly useTransition: UnwrapRef<
      typeof import("@vueuse/core")["useTransition"]
    >;
    readonly useUrlSearchParams: UnwrapRef<
      typeof import("@vueuse/core")["useUrlSearchParams"]
    >;
    readonly useUserMedia: UnwrapRef<
      typeof import("@vueuse/core")["useUserMedia"]
    >;
    readonly useVModel: UnwrapRef<typeof import("@vueuse/core")["useVModel"]>;
    readonly useVModels: UnwrapRef<typeof import("@vueuse/core")["useVModels"]>;
    readonly useVibrate: UnwrapRef<typeof import("@vueuse/core")["useVibrate"]>;
    readonly useVirtualList: UnwrapRef<
      typeof import("@vueuse/core")["useVirtualList"]
    >;
    readonly useWakeLock: UnwrapRef<
      typeof import("@vueuse/core")["useWakeLock"]
    >;
    readonly useWebNotification: UnwrapRef<
      typeof import("@vueuse/core")["useWebNotification"]
    >;
    readonly useWebSocket: UnwrapRef<
      typeof import("@vueuse/core")["useWebSocket"]
    >;
    readonly useWebWorker: UnwrapRef<
      typeof import("@vueuse/core")["useWebWorker"]
    >;
    readonly useWebWorkerFn: UnwrapRef<
      typeof import("@vueuse/core")["useWebWorkerFn"]
    >;
    readonly useWindowFocus: UnwrapRef<
      typeof import("@vueuse/core")["useWindowFocus"]
    >;
    readonly useWindowScroll: UnwrapRef<
      typeof import("@vueuse/core")["useWindowScroll"]
    >;
    readonly useWindowSize: UnwrapRef<
      typeof import("@vueuse/core")["useWindowSize"]
    >;
    readonly watch: UnwrapRef<typeof import("vue")["watch"]>;
    readonly watchArray: UnwrapRef<typeof import("@vueuse/core")["watchArray"]>;
    readonly watchAtMost: UnwrapRef<
      typeof import("@vueuse/core")["watchAtMost"]
    >;
    readonly watchDebounced: UnwrapRef<
      typeof import("@vueuse/core")["watchDebounced"]
    >;
    readonly watchDeep: UnwrapRef<typeof import("@vueuse/core")["watchDeep"]>;
    readonly watchEffect: UnwrapRef<typeof import("vue")["watchEffect"]>;
    readonly watchIgnorable: UnwrapRef<
      typeof import("@vueuse/core")["watchIgnorable"]
    >;
    readonly watchImmediate: UnwrapRef<
      typeof import("@vueuse/core")["watchImmediate"]
    >;
    readonly watchOnce: UnwrapRef<typeof import("@vueuse/core")["watchOnce"]>;
    readonly watchPausable: UnwrapRef<
      typeof import("@vueuse/core")["watchPausable"]
    >;
    readonly watchPostEffect: UnwrapRef<
      typeof import("vue")["watchPostEffect"]
    >;
    readonly watchSyncEffect: UnwrapRef<
      typeof import("vue")["watchSyncEffect"]
    >;
    readonly watchThrottled: UnwrapRef<
      typeof import("@vueuse/core")["watchThrottled"]
    >;
    readonly watchTriggerable: UnwrapRef<
      typeof import("@vueuse/core")["watchTriggerable"]
    >;
    readonly watchWithFilter: UnwrapRef<
      typeof import("@vueuse/core")["watchWithFilter"]
    >;
    readonly whenever: UnwrapRef<typeof import("@vueuse/core")["whenever"]>;
  }
}
declare module "@vue/runtime-core" {
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import("vue")["EffectScope"]>;
    readonly ElForm: UnwrapRef<typeof import("element-plus/es")["ElForm"]>;
    readonly ElMessage: UnwrapRef<
      typeof import("element-plus/es")["ElMessage"]
    >;
    readonly ElMessageBox: UnwrapRef<
      typeof import("element-plus/es")["ElMessageBox"]
    >;
    readonly ElTree: UnwrapRef<typeof import("element-plus/es")["ElTree"]>;
    readonly asyncComputed: UnwrapRef<
      typeof import("@vueuse/core")["asyncComputed"]
    >;
    readonly autoResetRef: UnwrapRef<
      typeof import("@vueuse/core")["autoResetRef"]
    >;
    readonly computed: UnwrapRef<typeof import("vue")["computed"]>;
    readonly computedAsync: UnwrapRef<
      typeof import("@vueuse/core")["computedAsync"]
    >;
    readonly computedEager: UnwrapRef<
      typeof import("@vueuse/core")["computedEager"]
    >;
    readonly computedInject: UnwrapRef<
      typeof import("@vueuse/core")["computedInject"]
    >;
    readonly computedWithControl: UnwrapRef<
      typeof import("@vueuse/core")["computedWithControl"]
    >;
    readonly controlledComputed: UnwrapRef<
      typeof import("@vueuse/core")["controlledComputed"]
    >;
    readonly controlledRef: UnwrapRef<
      typeof import("@vueuse/core")["controlledRef"]
    >;
    readonly createApp: UnwrapRef<typeof import("vue")["createApp"]>;
    readonly createEventHook: UnwrapRef<
      typeof import("@vueuse/core")["createEventHook"]
    >;
    readonly createGlobalState: UnwrapRef<
      typeof import("@vueuse/core")["createGlobalState"]
    >;
    readonly createInjectionState: UnwrapRef<
      typeof import("@vueuse/core")["createInjectionState"]
    >;
    readonly createReactiveFn: UnwrapRef<
      typeof import("@vueuse/core")["createReactiveFn"]
    >;
    readonly createReusableTemplate: UnwrapRef<
      typeof import("@vueuse/core")["createReusableTemplate"]
    >;
    readonly createSharedComposable: UnwrapRef<
      typeof import("@vueuse/core")["createSharedComposable"]
    >;
    readonly createTemplatePromise: UnwrapRef<
      typeof import("@vueuse/core")["createTemplatePromise"]
    >;
    readonly createUnrefFn: UnwrapRef<
      typeof import("@vueuse/core")["createUnrefFn"]
    >;
    readonly customRef: UnwrapRef<typeof import("vue")["customRef"]>;
    readonly debouncedRef: UnwrapRef<
      typeof import("@vueuse/core")["debouncedRef"]
    >;
    readonly debouncedWatch: UnwrapRef<
      typeof import("@vueuse/core")["debouncedWatch"]
    >;
    readonly defineAsyncComponent: UnwrapRef<
      typeof import("vue")["defineAsyncComponent"]
    >;
    readonly defineComponent: UnwrapRef<
      typeof import("vue")["defineComponent"]
    >;
    readonly eagerComputed: UnwrapRef<
      typeof import("@vueuse/core")["eagerComputed"]
    >;
    readonly effectScope: UnwrapRef<typeof import("vue")["effectScope"]>;
    readonly extendRef: UnwrapRef<typeof import("@vueuse/core")["extendRef"]>;
    readonly getCurrentInstance: UnwrapRef<
      typeof import("vue")["getCurrentInstance"]
    >;
    readonly getCurrentScope: UnwrapRef<
      typeof import("vue")["getCurrentScope"]
    >;
    readonly h: UnwrapRef<typeof import("vue")["h"]>;
    readonly ignorableWatch: UnwrapRef<
      typeof import("@vueuse/core")["ignorableWatch"]
    >;
    readonly inject: UnwrapRef<typeof import("vue")["inject"]>;
    readonly isDefined: UnwrapRef<typeof import("@vueuse/core")["isDefined"]>;
    readonly isProxy: UnwrapRef<typeof import("vue")["isProxy"]>;
    readonly isReactive: UnwrapRef<typeof import("vue")["isReactive"]>;
    readonly isReadonly: UnwrapRef<typeof import("vue")["isReadonly"]>;
    readonly isRef: UnwrapRef<typeof import("vue")["isRef"]>;
    readonly makeDestructurable: UnwrapRef<
      typeof import("@vueuse/core")["makeDestructurable"]
    >;
    readonly markRaw: UnwrapRef<typeof import("vue")["markRaw"]>;
    readonly nextTick: UnwrapRef<typeof import("vue")["nextTick"]>;
    readonly onActivated: UnwrapRef<typeof import("vue")["onActivated"]>;
    readonly onBeforeMount: UnwrapRef<typeof import("vue")["onBeforeMount"]>;
    readonly onBeforeUnmount: UnwrapRef<
      typeof import("vue")["onBeforeUnmount"]
    >;
    readonly onBeforeUpdate: UnwrapRef<typeof import("vue")["onBeforeUpdate"]>;
    readonly onClickOutside: UnwrapRef<
      typeof import("@vueuse/core")["onClickOutside"]
    >;
    readonly onDeactivated: UnwrapRef<typeof import("vue")["onDeactivated"]>;
    readonly onErrorCaptured: UnwrapRef<
      typeof import("vue")["onErrorCaptured"]
    >;
    readonly onKeyStroke: UnwrapRef<
      typeof import("@vueuse/core")["onKeyStroke"]
    >;
    readonly onLongPress: UnwrapRef<
      typeof import("@vueuse/core")["onLongPress"]
    >;
    readonly onMounted: UnwrapRef<typeof import("vue")["onMounted"]>;
    readonly onRenderTracked: UnwrapRef<
      typeof import("vue")["onRenderTracked"]
    >;
    readonly onRenderTriggered: UnwrapRef<
      typeof import("vue")["onRenderTriggered"]
    >;
    readonly onScopeDispose: UnwrapRef<typeof import("vue")["onScopeDispose"]>;
    readonly onServerPrefetch: UnwrapRef<
      typeof import("vue")["onServerPrefetch"]
    >;
    readonly onStartTyping: UnwrapRef<
      typeof import("@vueuse/core")["onStartTyping"]
    >;
    readonly onUnmounted: UnwrapRef<typeof import("vue")["onUnmounted"]>;
    readonly onUpdated: UnwrapRef<typeof import("vue")["onUpdated"]>;
    readonly pausableWatch: UnwrapRef<
      typeof import("@vueuse/core")["pausableWatch"]
    >;
    readonly provide: UnwrapRef<typeof import("vue")["provide"]>;
    readonly reactify: UnwrapRef<typeof import("@vueuse/core")["reactify"]>;
    readonly reactifyObject: UnwrapRef<
      typeof import("@vueuse/core")["reactifyObject"]
    >;
    readonly reactive: UnwrapRef<typeof import("vue")["reactive"]>;
    readonly reactiveComputed: UnwrapRef<
      typeof import("@vueuse/core")["reactiveComputed"]
    >;
    readonly reactiveOmit: UnwrapRef<
      typeof import("@vueuse/core")["reactiveOmit"]
    >;
    readonly reactivePick: UnwrapRef<
      typeof import("@vueuse/core")["reactivePick"]
    >;
    readonly readonly: UnwrapRef<typeof import("vue")["readonly"]>;
    readonly ref: UnwrapRef<typeof import("vue")["ref"]>;
    readonly refAutoReset: UnwrapRef<
      typeof import("@vueuse/core")["refAutoReset"]
    >;
    readonly refDebounced: UnwrapRef<
      typeof import("@vueuse/core")["refDebounced"]
    >;
    readonly refDefault: UnwrapRef<typeof import("@vueuse/core")["refDefault"]>;
    readonly refThrottled: UnwrapRef<
      typeof import("@vueuse/core")["refThrottled"]
    >;
    readonly refWithControl: UnwrapRef<
      typeof import("@vueuse/core")["refWithControl"]
    >;
    readonly resolveComponent: UnwrapRef<
      typeof import("vue")["resolveComponent"]
    >;
    readonly resolveRef: UnwrapRef<typeof import("@vueuse/core")["resolveRef"]>;
    readonly resolveUnref: UnwrapRef<
      typeof import("@vueuse/core")["resolveUnref"]
    >;
    readonly shallowReactive: UnwrapRef<
      typeof import("vue")["shallowReactive"]
    >;
    readonly shallowReadonly: UnwrapRef<
      typeof import("vue")["shallowReadonly"]
    >;
    readonly shallowRef: UnwrapRef<typeof import("vue")["shallowRef"]>;
    readonly syncRef: UnwrapRef<typeof import("@vueuse/core")["syncRef"]>;
    readonly syncRefs: UnwrapRef<typeof import("@vueuse/core")["syncRefs"]>;
    readonly templateRef: UnwrapRef<
      typeof import("@vueuse/core")["templateRef"]
    >;
    readonly throttledRef: UnwrapRef<
      typeof import("@vueuse/core")["throttledRef"]
    >;
    readonly throttledWatch: UnwrapRef<
      typeof import("@vueuse/core")["throttledWatch"]
    >;
    readonly toRaw: UnwrapRef<typeof import("vue")["toRaw"]>;
    readonly toReactive: UnwrapRef<typeof import("@vueuse/core")["toReactive"]>;
    readonly toRef: UnwrapRef<typeof import("vue")["toRef"]>;
    readonly toRefs: UnwrapRef<typeof import("vue")["toRefs"]>;
    readonly toValue: UnwrapRef<typeof import("vue")["toValue"]>;
    readonly triggerRef: UnwrapRef<typeof import("vue")["triggerRef"]>;
    readonly tryOnBeforeMount: UnwrapRef<
      typeof import("@vueuse/core")["tryOnBeforeMount"]
    >;
    readonly tryOnBeforeUnmount: UnwrapRef<
      typeof import("@vueuse/core")["tryOnBeforeUnmount"]
    >;
    readonly tryOnMounted: UnwrapRef<
      typeof import("@vueuse/core")["tryOnMounted"]
    >;
    readonly tryOnScopeDispose: UnwrapRef<
      typeof import("@vueuse/core")["tryOnScopeDispose"]
    >;
    readonly tryOnUnmounted: UnwrapRef<
      typeof import("@vueuse/core")["tryOnUnmounted"]
    >;
    readonly unref: UnwrapRef<typeof import("vue")["unref"]>;
    readonly unrefElement: UnwrapRef<
      typeof import("@vueuse/core")["unrefElement"]
    >;
    readonly until: UnwrapRef<typeof import("@vueuse/core")["until"]>;
    readonly useActiveElement: UnwrapRef<
      typeof import("@vueuse/core")["useActiveElement"]
    >;
    readonly useAnimate: UnwrapRef<typeof import("@vueuse/core")["useAnimate"]>;
    readonly useArrayDifference: UnwrapRef<
      typeof import("@vueuse/core")["useArrayDifference"]
    >;
    readonly useArrayEvery: UnwrapRef<
      typeof import("@vueuse/core")["useArrayEvery"]
    >;
    readonly useArrayFilter: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFilter"]
    >;
    readonly useArrayFind: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFind"]
    >;
    readonly useArrayFindIndex: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFindIndex"]
    >;
    readonly useArrayFindLast: UnwrapRef<
      typeof import("@vueuse/core")["useArrayFindLast"]
    >;
    readonly useArrayIncludes: UnwrapRef<
      typeof import("@vueuse/core")["useArrayIncludes"]
    >;
    readonly useArrayJoin: UnwrapRef<
      typeof import("@vueuse/core")["useArrayJoin"]
    >;
    readonly useArrayMap: UnwrapRef<
      typeof import("@vueuse/core")["useArrayMap"]
    >;
    readonly useArrayReduce: UnwrapRef<
      typeof import("@vueuse/core")["useArrayReduce"]
    >;
    readonly useArraySome: UnwrapRef<
      typeof import("@vueuse/core")["useArraySome"]
    >;
    readonly useArrayUnique: UnwrapRef<
      typeof import("@vueuse/core")["useArrayUnique"]
    >;
    readonly useAsyncQueue: UnwrapRef<
      typeof import("@vueuse/core")["useAsyncQueue"]
    >;
    readonly useAsyncState: UnwrapRef<
      typeof import("@vueuse/core")["useAsyncState"]
    >;
    readonly useAttrs: UnwrapRef<typeof import("vue")["useAttrs"]>;
    readonly useBase64: UnwrapRef<typeof import("@vueuse/core")["useBase64"]>;
    readonly useBattery: UnwrapRef<typeof import("@vueuse/core")["useBattery"]>;
    readonly useBluetooth: UnwrapRef<
      typeof import("@vueuse/core")["useBluetooth"]
    >;
    readonly useBreakpoints: UnwrapRef<
      typeof import("@vueuse/core")["useBreakpoints"]
    >;
    readonly useBroadcastChannel: UnwrapRef<
      typeof import("@vueuse/core")["useBroadcastChannel"]
    >;
    readonly useBrowserLocation: UnwrapRef<
      typeof import("@vueuse/core")["useBrowserLocation"]
    >;
    readonly useCached: UnwrapRef<typeof import("@vueuse/core")["useCached"]>;
    readonly useClipboard: UnwrapRef<
      typeof import("@vueuse/core")["useClipboard"]
    >;
    readonly useCloned: UnwrapRef<typeof import("@vueuse/core")["useCloned"]>;
    readonly useColorMode: UnwrapRef<
      typeof import("@vueuse/core")["useColorMode"]
    >;
    readonly useConfirmDialog: UnwrapRef<
      typeof import("@vueuse/core")["useConfirmDialog"]
    >;
    readonly useCounter: UnwrapRef<typeof import("@vueuse/core")["useCounter"]>;
    readonly useCssModule: UnwrapRef<typeof import("vue")["useCssModule"]>;
    readonly useCssVar: UnwrapRef<typeof import("@vueuse/core")["useCssVar"]>;
    readonly useCssVars: UnwrapRef<typeof import("vue")["useCssVars"]>;
    readonly useCurrentElement: UnwrapRef<
      typeof import("@vueuse/core")["useCurrentElement"]
    >;
    readonly useCycleList: UnwrapRef<
      typeof import("@vueuse/core")["useCycleList"]
    >;
    readonly useDark: UnwrapRef<typeof import("@vueuse/core")["useDark"]>;
    readonly useDateFormat: UnwrapRef<
      typeof import("@vueuse/core")["useDateFormat"]
    >;
    readonly useDebounce: UnwrapRef<
      typeof import("@vueuse/core")["useDebounce"]
    >;
    readonly useDebounceFn: UnwrapRef<
      typeof import("@vueuse/core")["useDebounceFn"]
    >;
    readonly useDebouncedRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useDebouncedRefHistory"]
    >;
    readonly useDeviceMotion: UnwrapRef<
      typeof import("@vueuse/core")["useDeviceMotion"]
    >;
    readonly useDeviceOrientation: UnwrapRef<
      typeof import("@vueuse/core")["useDeviceOrientation"]
    >;
    readonly useDevicePixelRatio: UnwrapRef<
      typeof import("@vueuse/core")["useDevicePixelRatio"]
    >;
    readonly useDevicesList: UnwrapRef<
      typeof import("@vueuse/core")["useDevicesList"]
    >;
    readonly useDisplayMedia: UnwrapRef<
      typeof import("@vueuse/core")["useDisplayMedia"]
    >;
    readonly useDocumentVisibility: UnwrapRef<
      typeof import("@vueuse/core")["useDocumentVisibility"]
    >;
    readonly useDraggable: UnwrapRef<
      typeof import("@vueuse/core")["useDraggable"]
    >;
    readonly useDropZone: UnwrapRef<
      typeof import("@vueuse/core")["useDropZone"]
    >;
    readonly useElementBounding: UnwrapRef<
      typeof import("@vueuse/core")["useElementBounding"]
    >;
    readonly useElementByPoint: UnwrapRef<
      typeof import("@vueuse/core")["useElementByPoint"]
    >;
    readonly useElementHover: UnwrapRef<
      typeof import("@vueuse/core")["useElementHover"]
    >;
    readonly useElementSize: UnwrapRef<
      typeof import("@vueuse/core")["useElementSize"]
    >;
    readonly useElementVisibility: UnwrapRef<
      typeof import("@vueuse/core")["useElementVisibility"]
    >;
    readonly useEventBus: UnwrapRef<
      typeof import("@vueuse/core")["useEventBus"]
    >;
    readonly useEventListener: UnwrapRef<
      typeof import("@vueuse/core")["useEventListener"]
    >;
    readonly useEventSource: UnwrapRef<
      typeof import("@vueuse/core")["useEventSource"]
    >;
    readonly useEyeDropper: UnwrapRef<
      typeof import("@vueuse/core")["useEyeDropper"]
    >;
    readonly useFavicon: UnwrapRef<typeof import("@vueuse/core")["useFavicon"]>;
    readonly useFetch: UnwrapRef<typeof import("@vueuse/core")["useFetch"]>;
    readonly useFileDialog: UnwrapRef<
      typeof import("@vueuse/core")["useFileDialog"]
    >;
    readonly useFileSystemAccess: UnwrapRef<
      typeof import("@vueuse/core")["useFileSystemAccess"]
    >;
    readonly useFocus: UnwrapRef<typeof import("@vueuse/core")["useFocus"]>;
    readonly useFocusWithin: UnwrapRef<
      typeof import("@vueuse/core")["useFocusWithin"]
    >;
    readonly useFps: UnwrapRef<typeof import("@vueuse/core")["useFps"]>;
    readonly useFullscreen: UnwrapRef<
      typeof import("@vueuse/core")["useFullscreen"]
    >;
    readonly useGamepad: UnwrapRef<typeof import("@vueuse/core")["useGamepad"]>;
    readonly useGeolocation: UnwrapRef<
      typeof import("@vueuse/core")["useGeolocation"]
    >;
    readonly useIdle: UnwrapRef<typeof import("@vueuse/core")["useIdle"]>;
    readonly useImage: UnwrapRef<typeof import("@vueuse/core")["useImage"]>;
    readonly useInfiniteScroll: UnwrapRef<
      typeof import("@vueuse/core")["useInfiniteScroll"]
    >;
    readonly useIntersectionObserver: UnwrapRef<
      typeof import("@vueuse/core")["useIntersectionObserver"]
    >;
    readonly useInterval: UnwrapRef<
      typeof import("@vueuse/core")["useInterval"]
    >;
    readonly useIntervalFn: UnwrapRef<
      typeof import("@vueuse/core")["useIntervalFn"]
    >;
    readonly useKeyModifier: UnwrapRef<
      typeof import("@vueuse/core")["useKeyModifier"]
    >;
    readonly useLastChanged: UnwrapRef<
      typeof import("@vueuse/core")["useLastChanged"]
    >;
    readonly useLocalStorage: UnwrapRef<
      typeof import("@vueuse/core")["useLocalStorage"]
    >;
    readonly useMagicKeys: UnwrapRef<
      typeof import("@vueuse/core")["useMagicKeys"]
    >;
    readonly useManualRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useManualRefHistory"]
    >;
    readonly useMediaControls: UnwrapRef<
      typeof import("@vueuse/core")["useMediaControls"]
    >;
    readonly useMediaQuery: UnwrapRef<
      typeof import("@vueuse/core")["useMediaQuery"]
    >;
    readonly useMemoize: UnwrapRef<typeof import("@vueuse/core")["useMemoize"]>;
    readonly useMemory: UnwrapRef<typeof import("@vueuse/core")["useMemory"]>;
    readonly useMounted: UnwrapRef<typeof import("@vueuse/core")["useMounted"]>;
    readonly useMouse: UnwrapRef<typeof import("@vueuse/core")["useMouse"]>;
    readonly useMouseInElement: UnwrapRef<
      typeof import("@vueuse/core")["useMouseInElement"]
    >;
    readonly useMousePressed: UnwrapRef<
      typeof import("@vueuse/core")["useMousePressed"]
    >;
    readonly useMutationObserver: UnwrapRef<
      typeof import("@vueuse/core")["useMutationObserver"]
    >;
    readonly useNavigatorLanguage: UnwrapRef<
      typeof import("@vueuse/core")["useNavigatorLanguage"]
    >;
    readonly useNetwork: UnwrapRef<typeof import("@vueuse/core")["useNetwork"]>;
    readonly useNow: UnwrapRef<typeof import("@vueuse/core")["useNow"]>;
    readonly useObjectUrl: UnwrapRef<
      typeof import("@vueuse/core")["useObjectUrl"]
    >;
    readonly useOffsetPagination: UnwrapRef<
      typeof import("@vueuse/core")["useOffsetPagination"]
    >;
    readonly useOnline: UnwrapRef<typeof import("@vueuse/core")["useOnline"]>;
    readonly usePageLeave: UnwrapRef<
      typeof import("@vueuse/core")["usePageLeave"]
    >;
    readonly useParallax: UnwrapRef<
      typeof import("@vueuse/core")["useParallax"]
    >;
    readonly useParentElement: UnwrapRef<
      typeof import("@vueuse/core")["useParentElement"]
    >;
    readonly usePerformanceObserver: UnwrapRef<
      typeof import("@vueuse/core")["usePerformanceObserver"]
    >;
    readonly usePermission: UnwrapRef<
      typeof import("@vueuse/core")["usePermission"]
    >;
    readonly usePointer: UnwrapRef<typeof import("@vueuse/core")["usePointer"]>;
    readonly usePointerLock: UnwrapRef<
      typeof import("@vueuse/core")["usePointerLock"]
    >;
    readonly usePointerSwipe: UnwrapRef<
      typeof import("@vueuse/core")["usePointerSwipe"]
    >;
    readonly usePreferredColorScheme: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredColorScheme"]
    >;
    readonly usePreferredContrast: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredContrast"]
    >;
    readonly usePreferredDark: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredDark"]
    >;
    readonly usePreferredLanguages: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredLanguages"]
    >;
    readonly usePreferredReducedMotion: UnwrapRef<
      typeof import("@vueuse/core")["usePreferredReducedMotion"]
    >;
    readonly usePrevious: UnwrapRef<
      typeof import("@vueuse/core")["usePrevious"]
    >;
    readonly useRafFn: UnwrapRef<typeof import("@vueuse/core")["useRafFn"]>;
    readonly useRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useRefHistory"]
    >;
    readonly useResizeObserver: UnwrapRef<
      typeof import("@vueuse/core")["useResizeObserver"]
    >;
    readonly useScreenOrientation: UnwrapRef<
      typeof import("@vueuse/core")["useScreenOrientation"]
    >;
    readonly useScreenSafeArea: UnwrapRef<
      typeof import("@vueuse/core")["useScreenSafeArea"]
    >;
    readonly useScriptTag: UnwrapRef<
      typeof import("@vueuse/core")["useScriptTag"]
    >;
    readonly useScroll: UnwrapRef<typeof import("@vueuse/core")["useScroll"]>;
    readonly useScrollLock: UnwrapRef<
      typeof import("@vueuse/core")["useScrollLock"]
    >;
    readonly useSessionStorage: UnwrapRef<
      typeof import("@vueuse/core")["useSessionStorage"]
    >;
    readonly useShare: UnwrapRef<typeof import("@vueuse/core")["useShare"]>;
    readonly useSlots: UnwrapRef<typeof import("vue")["useSlots"]>;
    readonly useSorted: UnwrapRef<typeof import("@vueuse/core")["useSorted"]>;
    readonly useSpeechRecognition: UnwrapRef<
      typeof import("@vueuse/core")["useSpeechRecognition"]
    >;
    readonly useSpeechSynthesis: UnwrapRef<
      typeof import("@vueuse/core")["useSpeechSynthesis"]
    >;
    readonly useStepper: UnwrapRef<typeof import("@vueuse/core")["useStepper"]>;
    readonly useStorage: UnwrapRef<typeof import("@vueuse/core")["useStorage"]>;
    readonly useStorageAsync: UnwrapRef<
      typeof import("@vueuse/core")["useStorageAsync"]
    >;
    readonly useStyleTag: UnwrapRef<
      typeof import("@vueuse/core")["useStyleTag"]
    >;
    readonly useSupported: UnwrapRef<
      typeof import("@vueuse/core")["useSupported"]
    >;
    readonly useSwipe: UnwrapRef<typeof import("@vueuse/core")["useSwipe"]>;
    readonly useTemplateRefsList: UnwrapRef<
      typeof import("@vueuse/core")["useTemplateRefsList"]
    >;
    readonly useTextDirection: UnwrapRef<
      typeof import("@vueuse/core")["useTextDirection"]
    >;
    readonly useTextSelection: UnwrapRef<
      typeof import("@vueuse/core")["useTextSelection"]
    >;
    readonly useTextareaAutosize: UnwrapRef<
      typeof import("@vueuse/core")["useTextareaAutosize"]
    >;
    readonly useThrottle: UnwrapRef<
      typeof import("@vueuse/core")["useThrottle"]
    >;
    readonly useThrottleFn: UnwrapRef<
      typeof import("@vueuse/core")["useThrottleFn"]
    >;
    readonly useThrottledRefHistory: UnwrapRef<
      typeof import("@vueuse/core")["useThrottledRefHistory"]
    >;
    readonly useTimeAgo: UnwrapRef<typeof import("@vueuse/core")["useTimeAgo"]>;
    readonly useTimeout: UnwrapRef<typeof import("@vueuse/core")["useTimeout"]>;
    readonly useTimeoutFn: UnwrapRef<
      typeof import("@vueuse/core")["useTimeoutFn"]
    >;
    readonly useTimeoutPoll: UnwrapRef<
      typeof import("@vueuse/core")["useTimeoutPoll"]
    >;
    readonly useTimestamp: UnwrapRef<
      typeof import("@vueuse/core")["useTimestamp"]
    >;
    readonly useTitle: UnwrapRef<typeof import("@vueuse/core")["useTitle"]>;
    readonly useToNumber: UnwrapRef<
      typeof import("@vueuse/core")["useToNumber"]
    >;
    readonly useToString: UnwrapRef<
      typeof import("@vueuse/core")["useToString"]
    >;
    readonly useToggle: UnwrapRef<typeof import("@vueuse/core")["useToggle"]>;
    readonly useTransition: UnwrapRef<
      typeof import("@vueuse/core")["useTransition"]
    >;
    readonly useUrlSearchParams: UnwrapRef<
      typeof import("@vueuse/core")["useUrlSearchParams"]
    >;
    readonly useUserMedia: UnwrapRef<
      typeof import("@vueuse/core")["useUserMedia"]
    >;
    readonly useVModel: UnwrapRef<typeof import("@vueuse/core")["useVModel"]>;
    readonly useVModels: UnwrapRef<typeof import("@vueuse/core")["useVModels"]>;
    readonly useVibrate: UnwrapRef<typeof import("@vueuse/core")["useVibrate"]>;
    readonly useVirtualList: UnwrapRef<
      typeof import("@vueuse/core")["useVirtualList"]
    >;
    readonly useWakeLock: UnwrapRef<
      typeof import("@vueuse/core")["useWakeLock"]
    >;
    readonly useWebNotification: UnwrapRef<
      typeof import("@vueuse/core")["useWebNotification"]
    >;
    readonly useWebSocket: UnwrapRef<
      typeof import("@vueuse/core")["useWebSocket"]
    >;
    readonly useWebWorker: UnwrapRef<
      typeof import("@vueuse/core")["useWebWorker"]
    >;
    readonly useWebWorkerFn: UnwrapRef<
      typeof import("@vueuse/core")["useWebWorkerFn"]
    >;
    readonly useWindowFocus: UnwrapRef<
      typeof import("@vueuse/core")["useWindowFocus"]
    >;
    readonly useWindowScroll: UnwrapRef<
      typeof import("@vueuse/core")["useWindowScroll"]
    >;
    readonly useWindowSize: UnwrapRef<
      typeof import("@vueuse/core")["useWindowSize"]
    >;
    readonly watch: UnwrapRef<typeof import("vue")["watch"]>;
    readonly watchArray: UnwrapRef<typeof import("@vueuse/core")["watchArray"]>;
    readonly watchAtMost: UnwrapRef<
      typeof import("@vueuse/core")["watchAtMost"]
    >;
    readonly watchDebounced: UnwrapRef<
      typeof import("@vueuse/core")["watchDebounced"]
    >;
    readonly watchDeep: UnwrapRef<typeof import("@vueuse/core")["watchDeep"]>;
    readonly watchEffect: UnwrapRef<typeof import("vue")["watchEffect"]>;
    readonly watchIgnorable: UnwrapRef<
      typeof import("@vueuse/core")["watchIgnorable"]
    >;
    readonly watchImmediate: UnwrapRef<
      typeof import("@vueuse/core")["watchImmediate"]
    >;
    readonly watchOnce: UnwrapRef<typeof import("@vueuse/core")["watchOnce"]>;
    readonly watchPausable: UnwrapRef<
      typeof import("@vueuse/core")["watchPausable"]
    >;
    readonly watchPostEffect: UnwrapRef<
      typeof import("vue")["watchPostEffect"]
    >;
    readonly watchSyncEffect: UnwrapRef<
      typeof import("vue")["watchSyncEffect"]
    >;
    readonly watchThrottled: UnwrapRef<
      typeof import("@vueuse/core")["watchThrottled"]
    >;
    readonly watchTriggerable: UnwrapRef<
      typeof import("@vueuse/core")["watchTriggerable"]
    >;
    readonly watchWithFilter: UnwrapRef<
      typeof import("@vueuse/core")["watchWithFilter"]
    >;
    readonly whenever: UnwrapRef<typeof import("@vueuse/core")["whenever"]>;
  }
}
